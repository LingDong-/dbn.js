// The Hunt -- Tom White// Nothing is timeless// except for the hunt// !!!// set the computer speed from 0-10// !!set machineSpeed 5set fx <time 3>set fy <time 4>set fdx 0set fdy 0set h1x 20set h1y 20set h1dx 200set h1dy 200set h2x 80set h2y 20set h2dx -200set h2dy 200set h3x 20set h3y 80set h3dx 200set h3dy -200set h4x 80set h4y 80set h4dx -200set h4dy -200// draw a critter color c shadow scommand drawCritter x y dx dy px py c s{   field (x-3-dx/100) (y-1-dy/100) (x+3-dx/100) (y+2-dy/100) s   pen c   //line x y (x+px*5/20) (y+py*5/20)   field (x-4) (y-2) (x+4) (y+4) c}// draw a fox color c shadow scommand drawFox x y dx dy px py c s{   set ex 1   smaller? px 0   {      set ex (-1)   }   set ey 1   smaller? py 0   {      set ey (-1)   }   //line x y (x+px*5/20) (y+py*5/20)   field (x-3) (y-2) (x+3) (y+2) c   set [ (x-1+ex) (y+ey) ] (100-c)   set [ (x+1+ex) (y+ey) ] (100-c)}// draw a hound color c shadow scommand drawHound x y dx dy px py c s{   set ex 1   smaller? px 0   {      set ex (-1)   }   set ey 1   smaller? py 0   {      set ey (-1)   }   field (x-3-dx/100) (y-1-dy/100) (x+3-dx/100) (y+2-dy/100) s   pen c   //line x y (x+px*5/20) (y+py*5/20)   field (x-4) (y-3) (x+4) (y+3) c   set [ (x+ex) (y+ey) ] (100-c)   set [ (x+ex) (y+ey+ey) ] (100-c)}set pickone 0forever{   // compute hound forces   set fh1x (10 *(fx - h1x)/10)   set fh1y (10 *(fy - h1y)/10)   set fh2x (7 *(fx - h2x)/10)   set fh2y (17 *(fy - h2y)/10)   set fh3x (8 *(fx - h3x)/10)   set fh3y (15 *(fy - h3y)/10)   set fh4x (19 *(fx - h4x)/10)   set fh4y (13 *(fy - h4y)/10)   // fox is stronger, sees all   set ffx (2*(50 - fx))   set ffy (2*(50 - fy))   notsame? h1x fx   {      set ffx (ffx - 100/(h1x - fx))   }   notsame? h1y fy   {      set ffy (ffy - 100/(h1y - fy))   }   notsame? h2x fx   {      set ffx (ffx - 100/(h2x - fx))   }   notsame? h2y fy   {      set ffy (ffy - 100/(h2y - fy))   }   notsame? h3x fx   {      set ffx (ffx - 100/(h3x - fx))   }   notsame? h3y fy   {      set ffy (ffy - 100/(h3y - fy))   }   notsame? h4x fx   {      set ffx (ffx - 100/(h4x - fx))   }   notsame? h4y fy   {      set ffy (ffy - 100/(h4y - fy))   }   set pickone (pickone+1)   same? pickone 5   {      set pickone 0   }   set push <time 4>   set pull <time 3>   notsame? pickone 0   {      set ffx (ffx + (push - 50))      set ffy (ffy + 2*(pull - 30))   }   notsame? pickone 1   {      set fh1x (fh1x + (push - 50))      set fh1y (fh1y + 2*(pull - 30))   }   notsame? pickone 2   {      set fh2x (fh2x + (push - 50))      set fh2y (fh2y + 2*(pull - 30))   }   notsame? pickone 3   {      set fh3x (fh3x + (push - 50))      set fh3y (fh3y + 2*(pull - 30))   }   notsame? pickone 4   {      set fh4x (fh4x + (push - 50))      set fh4y (fh4y + 2*(pull - 30))   }   set h1dx (8*h1dx/10 + fh1x)   set h1dy (9*h1dy/10 + fh1y)   set h2dx (9*h2dx/10 + fh2x)   set h2dy (9*h2dy/10 + fh2y)   set h3dx (8*h3dx/10 + fh3x)   set h3dy (8*h3dy/10 + fh3y)   set h4dx (9*h4dx/10 + fh4x)   set h4dy (8*h4dy/10 + fh4y)   set fdx (98*fdx/100 + ffx)   set fdy (98*fdy/100 + ffy)   // render   paper 20   drawFox fx fy fdx fdy ffx ffy 0 15   drawHound h1x h1y h1dx h1dy h1dx h1dy 70 25   drawHound h2x h2y h2dx h2dy h2dx h2dy 80 25   drawHound h3x h3y h3dx h3dy h3dx h3dy 90 25   drawHound h4x h4y h4dx h4dy h4dx h4dy 100 25   // move   same? <mouse 3> 100   {      set fx <mouse 1>      set fy <mouse 2>   }   notsame? <mouse 3> 100   {      set fx (fx+fdx/100)      set fy (fy+fdy/100)   }   set h1x (h1x+h1dx/100)   set h1y (h1y+h1dy/100)   set h2x (h2x+h2dx/100)   set h2y (h2y+h2dy/100)   set h3x (h3x+h3dx/100)   set h3y (h3y+h3dy/100)   set h4x (h4x+h4dx/100)   set h4y (h4y+h4dy/100)   // painful clamping   smaller? fx 0   {      set fx 0   }   smaller? 100 fx   {      set fx 100   }   smaller? fy 0   {      set fy 0   }   smaller? 100 fy   {      set fy 100   }   pause machineSpeed}